//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebClient.ServiceRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Emp", Namespace="http://schemas.datacontract.org/2004/07/Employee_Service")]
    [System.SerializableAttribute()]
    public partial class Emp : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Emp_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Emp_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DP_IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Emp_ID {
            get {
                return this.Emp_IDField;
            }
            set {
                if ((this.Emp_IDField.Equals(value) != true)) {
                    this.Emp_IDField = value;
                    this.RaisePropertyChanged("Emp_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Emp_Name {
            get {
                return this.Emp_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Emp_NameField, value) != true)) {
                    this.Emp_NameField = value;
                    this.RaisePropertyChanged("Emp_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int DP_ID {
            get {
                return this.DP_IDField;
            }
            set {
                if ((this.DP_IDField.Equals(value) != true)) {
                    this.DP_IDField = value;
                    this.RaisePropertyChanged("DP_ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Department", Namespace="http://schemas.datacontract.org/2004/07/Employee_Service")]
    [System.SerializableAttribute()]
    public partial class Department : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DP_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DP_NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DP_ID {
            get {
                return this.DP_IDField;
            }
            set {
                if ((this.DP_IDField.Equals(value) != true)) {
                    this.DP_IDField = value;
                    this.RaisePropertyChanged("DP_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DP_Name {
            get {
                return this.DP_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.DP_NameField, value) != true)) {
                    this.DP_NameField = value;
                    this.RaisePropertyChanged("DP_Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceRef.I_Employee_Service")]
    public interface I_Employee_Service {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_Employee_Service/GetAllEmp", ReplyAction="http://tempuri.org/I_Employee_Service/GetAllEmpResponse")]
        WebClient.ServiceRef.Emp[] GetAllEmp();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_Employee_Service/GetAllEmp", ReplyAction="http://tempuri.org/I_Employee_Service/GetAllEmpResponse")]
        System.Threading.Tasks.Task<WebClient.ServiceRef.Emp[]> GetAllEmpAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_Employee_Service/GetAllDepartment", ReplyAction="http://tempuri.org/I_Employee_Service/GetAllDepartmentResponse")]
        WebClient.ServiceRef.Department[] GetAllDepartment();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_Employee_Service/GetAllDepartment", ReplyAction="http://tempuri.org/I_Employee_Service/GetAllDepartmentResponse")]
        System.Threading.Tasks.Task<WebClient.ServiceRef.Department[]> GetAllDepartmentAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_Employee_Service/GetEmpByID", ReplyAction="http://tempuri.org/I_Employee_Service/GetEmpByIDResponse")]
        WebClient.ServiceRef.Emp GetEmpByID(string Emp_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_Employee_Service/GetEmpByID", ReplyAction="http://tempuri.org/I_Employee_Service/GetEmpByIDResponse")]
        System.Threading.Tasks.Task<WebClient.ServiceRef.Emp> GetEmpByIDAsync(string Emp_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_Employee_Service/GetDeptByID", ReplyAction="http://tempuri.org/I_Employee_Service/GetDeptByIDResponse")]
        WebClient.ServiceRef.Department GetDeptByID(string DP_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_Employee_Service/GetDeptByID", ReplyAction="http://tempuri.org/I_Employee_Service/GetDeptByIDResponse")]
        System.Threading.Tasks.Task<WebClient.ServiceRef.Department> GetDeptByIDAsync(string DP_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_Employee_Service/InsertEmp", ReplyAction="http://tempuri.org/I_Employee_Service/InsertEmpResponse")]
        void InsertEmp(string Emp_ID, string Emp_Name, string DP_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_Employee_Service/InsertEmp", ReplyAction="http://tempuri.org/I_Employee_Service/InsertEmpResponse")]
        System.Threading.Tasks.Task InsertEmpAsync(string Emp_ID, string Emp_Name, string DP_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_Employee_Service/InsertDept", ReplyAction="http://tempuri.org/I_Employee_Service/InsertDeptResponse")]
        void InsertDept(string DP_ID, string DP_Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_Employee_Service/InsertDept", ReplyAction="http://tempuri.org/I_Employee_Service/InsertDeptResponse")]
        System.Threading.Tasks.Task InsertDeptAsync(string DP_ID, string DP_Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_Employee_Service/UpdateEmp", ReplyAction="http://tempuri.org/I_Employee_Service/UpdateEmpResponse")]
        void UpdateEmp(string Emp_ID, string Emp_Name, string DP_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_Employee_Service/UpdateEmp", ReplyAction="http://tempuri.org/I_Employee_Service/UpdateEmpResponse")]
        System.Threading.Tasks.Task UpdateEmpAsync(string Emp_ID, string Emp_Name, string DP_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_Employee_Service/UpdateDept", ReplyAction="http://tempuri.org/I_Employee_Service/UpdateDeptResponse")]
        void UpdateDept(string DP_Name, string DP_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_Employee_Service/UpdateDept", ReplyAction="http://tempuri.org/I_Employee_Service/UpdateDeptResponse")]
        System.Threading.Tasks.Task UpdateDeptAsync(string DP_Name, string DP_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_Employee_Service/Delete_Emp", ReplyAction="http://tempuri.org/I_Employee_Service/Delete_EmpResponse")]
        int Delete_Emp(string Emp_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_Employee_Service/Delete_Emp", ReplyAction="http://tempuri.org/I_Employee_Service/Delete_EmpResponse")]
        System.Threading.Tasks.Task<int> Delete_EmpAsync(string Emp_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_Employee_Service/Delete_Dept", ReplyAction="http://tempuri.org/I_Employee_Service/Delete_DeptResponse")]
        int Delete_Dept(string DP_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_Employee_Service/Delete_Dept", ReplyAction="http://tempuri.org/I_Employee_Service/Delete_DeptResponse")]
        System.Threading.Tasks.Task<int> Delete_DeptAsync(string DP_ID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface I_Employee_ServiceChannel : WebClient.ServiceRef.I_Employee_Service, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class I_Employee_ServiceClient : System.ServiceModel.ClientBase<WebClient.ServiceRef.I_Employee_Service>, WebClient.ServiceRef.I_Employee_Service {
        
        public I_Employee_ServiceClient() {
        }
        
        public I_Employee_ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public I_Employee_ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public I_Employee_ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public I_Employee_ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WebClient.ServiceRef.Emp[] GetAllEmp() {
            return base.Channel.GetAllEmp();
        }
        
        public System.Threading.Tasks.Task<WebClient.ServiceRef.Emp[]> GetAllEmpAsync() {
            return base.Channel.GetAllEmpAsync();
        }
        
        public WebClient.ServiceRef.Department[] GetAllDepartment() {
            return base.Channel.GetAllDepartment();
        }
        
        public System.Threading.Tasks.Task<WebClient.ServiceRef.Department[]> GetAllDepartmentAsync() {
            return base.Channel.GetAllDepartmentAsync();
        }
        
        public WebClient.ServiceRef.Emp GetEmpByID(string Emp_ID) {
            return base.Channel.GetEmpByID(Emp_ID);
        }
        
        public System.Threading.Tasks.Task<WebClient.ServiceRef.Emp> GetEmpByIDAsync(string Emp_ID) {
            return base.Channel.GetEmpByIDAsync(Emp_ID);
        }
        
        public WebClient.ServiceRef.Department GetDeptByID(string DP_ID) {
            return base.Channel.GetDeptByID(DP_ID);
        }
        
        public System.Threading.Tasks.Task<WebClient.ServiceRef.Department> GetDeptByIDAsync(string DP_ID) {
            return base.Channel.GetDeptByIDAsync(DP_ID);
        }
        
        public void InsertEmp(string Emp_ID, string Emp_Name, string DP_ID) {
            base.Channel.InsertEmp(Emp_ID, Emp_Name, DP_ID);
        }
        
        public System.Threading.Tasks.Task InsertEmpAsync(string Emp_ID, string Emp_Name, string DP_ID) {
            return base.Channel.InsertEmpAsync(Emp_ID, Emp_Name, DP_ID);
        }
        
        public void InsertDept(string DP_ID, string DP_Name) {
            base.Channel.InsertDept(DP_ID, DP_Name);
        }
        
        public System.Threading.Tasks.Task InsertDeptAsync(string DP_ID, string DP_Name) {
            return base.Channel.InsertDeptAsync(DP_ID, DP_Name);
        }
        
        public void UpdateEmp(string Emp_ID, string Emp_Name, string DP_ID) {
            base.Channel.UpdateEmp(Emp_ID, Emp_Name, DP_ID);
        }
        
        public System.Threading.Tasks.Task UpdateEmpAsync(string Emp_ID, string Emp_Name, string DP_ID) {
            return base.Channel.UpdateEmpAsync(Emp_ID, Emp_Name, DP_ID);
        }
        
        public void UpdateDept(string DP_Name, string DP_ID) {
            base.Channel.UpdateDept(DP_Name, DP_ID);
        }
        
        public System.Threading.Tasks.Task UpdateDeptAsync(string DP_Name, string DP_ID) {
            return base.Channel.UpdateDeptAsync(DP_Name, DP_ID);
        }
        
        public int Delete_Emp(string Emp_ID) {
            return base.Channel.Delete_Emp(Emp_ID);
        }
        
        public System.Threading.Tasks.Task<int> Delete_EmpAsync(string Emp_ID) {
            return base.Channel.Delete_EmpAsync(Emp_ID);
        }
        
        public int Delete_Dept(string DP_ID) {
            return base.Channel.Delete_Dept(DP_ID);
        }
        
        public System.Threading.Tasks.Task<int> Delete_DeptAsync(string DP_ID) {
            return base.Channel.Delete_DeptAsync(DP_ID);
        }
    }
}
